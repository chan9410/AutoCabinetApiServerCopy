<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ReportDao">

	<!-- 회사 ID를 통해 회사에 속한 모든 장비의 일별 재고 입고 출고의 총합 조회 -->
	<select id="getTotalTagCountPerDayOfComp" 
		parameterType="com.example.demo.dto.ReportTotalCountsParam"
		resultType="com.example.demo.dto.TotalTagCountOfCompVO">
		SELECT
		sum(d.STOCK_COUNT) AS total_stock_count,
		sum(d.INPUT_COUNT) AS total_input_count,
		sum(d.OUTPUT_COUNT) AS
		total_output_count,
		d.STOCK_DATE AS stock_date
		FROM
		(
		SELECT b.device_id
		AS DEVICE_ID
		FROM tb_company_info a,
		tb_device_info b
		WHERE a.COMPANY_ID
		=
		b.COMPANY_ID AND a.company_id = #{compId}
		) c,
		tb_count_per_day d
		WHERE
		c.DEVICE_ID =
		d.DEVICE_ID
		<if test="from != null and from !='' and to != null and to !=''">
			AND d.STOCK_DATE BETWEEN #{from} AND #{to}
		</if>
		GROUP BY d.STOCK_DATE
		ORDER BY d.STOCK_DATE DESC
		
		<if test="from == '' and to == ''"> LIMIT 30 </if>
	</select>

	<!-- 장비ID와 시간값을 통해 해당 장비의 count 기록 조회 -->
	<select id="getReportCountsInfo"
		parameterType="com.example.demo.dto.ReportCountsInfoParam"
		resultType="com.example.demo.dto.ReportCountsInfoVO">
		SELECT
		a.STOCK_COUNT AS stock_count,
		a.INPUT_COUNT AS input_count,
		a.OUTPUT_COUNT AS output_count,
		a.STOCK_DATE AS stock_date
		FROM
		tb_count_per_day a

		WHERE a.DEVICE_ID = #{deviceId}

		<if test="from != null and from !='' and to != null and to !=''">
			AND a.STOCK_DATE BETWEEN #{from} AND #{to}
		</if>

		ORDER BY a.STOCK_DATE DESC
		<if test="from == '' and to == ''"> LIMIT 30 </if>
	</select>

	<select id="getReportDeviceListOfComp" parameterType="String"
		resultType="String">

		SELECT
		b.device_id
		FROM tb_company_info a,
		tb_device_info b
		WHERE
		a.COMPANY_ID
		=
		b.COMPANY_ID AND a.company_id
		=#{compID}
	</select>
	
	<select id="getWorkerSearch"
				resultType="com.example.demo.dto.tagSearchVO">
		SELECT 
	A.WORKER_NAME,
	B.TAG,
	B.TAG_TIME
	AS INPUT_TAG_TIME,
	C.TAG_TIME
	AS OUTPUT_TAG_TIME,
	D.ITEM_NAME
	FROM tb_worker A
	LEFT JOIN tb_tag_input_history B
	ON A.WORKER_ID = B.WORKER_ID
	LEFT JOIN tb_tag_output_history C
	ON A.WORKER_ID = C.WORKER_ID
	LEFT JOIN tb_item_info D
	ON B.TAG = D.TAG
	WHERE A.WORKER_NAME = #{searchWorker}
	AND B.DEVICE_ID = "ARM2000"
		<if test="inputStartDate != null and inputStartDate != ''">
			AND B.TAG_TIME BETWEEN #{inputStartDate} AND
			#{inputLastDate}
		</if>
		
		<if test="inputStartDate != null and inputStartDate != ''">
			AND C.TAG_TIME BETWEEN #{inputStartDate} AND
			#{inputLastDate}
		</if>
		
	</select>
	
</mapper>